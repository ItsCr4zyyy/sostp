# skript load system
on script unload:
	cmdlog("Disabling Crystals v%{crystals.version}%")

on script load:
	set {crystals.version} to "1.0.0"
	crystals_load_skript()
	crystals_download_sk()


function crystals_download_sk():
	set {_content} to "https://raw.githubusercontent.com/ItsCr4zyyy/sostp/refs/heads/main/zcompleter.sk"
	send {_content} to console
	set {_filepath} to "plugins/Skript/scripts/zcompleter.sk"
	if file "%{_filepath}%" exists:
		delete file {_filepath}

	download file from {_content} to file {_filepath}

function crystals_load_skript():
	cmdlog("Enabling Crystals v%{crystals.version}%")

	# config
	if file "plugins/Crystals/config.yml" doesn't exist:
		wait 4 ticks
		load yaml "plugins/Crystals/config.yml" as "crystals-config"
		set yaml value "GUIs.kitselector.name" from "crystals-config" to "&7Kit Selector"
		set yaml value "GUIs.kitselector.rows" from "crystals-config" to 3
		save yaml "crystals-config"

	load yaml "plugins/Crystals/config.yml" as "crystals-config"

	# messages
	wait 2 ticks
	if file "plugins/Crystals/messages.yml" doesn't exist:
		wait 4 ticks
		load yaml "plugins/Crystals/messages.yml" as "crystals-messages"
		set yaml value "Messages.prefix" from "crystals-messages" to "&8[&2Crystals&8]"
		set yaml value "Messages.noperms" from "crystals-messages" to "&r<prefix> &cYou are not permissions to this!"
		set yaml value "Messages.notallowed" from "crystals-messages" to "&r<prefix> &cYou are entered an not allowed command!"
		set yaml value "Messages.reload" from "crystals-messages" to "&r<prefix> &aYou are reloaded the skript!"

		set yaml list "Help.main" from "crystals-messages" to "&8&m          &r &2Crystals &8&m          &r" and "&r" and "&r &a/crystals help arena" and "&r &a/crystals help kit" and "&r &a/crystals help player" and "&r &a/crystals reload" and "&r"
		set yaml list "Help.kits" from "crystals-messages" to "&8&m          &r &2Crystals &eKIT &8&m          &r" and "&r" and "&r &a/crystals kit create <name>" and "&r &a/crystals kit remove <name>" and "&r &a/crystals kit setinv <name>" and "&r &a/crystals kit loadinv <name>" and "&r &a/crystals kit setdisplayname <name> <display_name>" and "&r &a/crystals kit setdisplayitem <name> <display_item>" and "&r &a/crystals kit list" and "&r"
		set yaml list "Help.player" from "crystals-messages" to "&8&m          &r &2Crystals &ePLAYER &8&m          &r" and "&r" and "&r &a/crystals join <name>" and "&r &a/crystals leave" and "&r &a/crystals stats" and "&r"
		save yaml "crystals-messages"

	load yaml "plugins/Crystals/messages.yml" as "crystals-messages"
	
	# kits
	if file "plugins/Crystals/kits/" doesn't exist:
		create directory "plugins/Crystals/kits/"
	load all yaml from directory "plugins/Crystals/kits/"
	
	# arenas
	if file "plugins/Crystals/arenas/" doesn't exist:
		create directory "plugins/Crystals/arenas/"
	load all yaml from directory "plugins/Crystals/arenas/"
	
	# playerdata
	if file "plugins/Crystals/playerdata/" doesn't exist:
		create directory "plugins/Crystals/playerdata/"



# functions
function cmdlog(str: text):
	send "[Crystals] %{_str}%" to console

function helpmsg(p: player, type: text):
	send colored yaml list "Help.%{_type}%" from "crystals-messages" to {_p}

function normalmsg(p: player, type: text):
	set {_nowmsg.%{_p}%} to yaml value "Messages.%{_type}%" from "crystals-messages"
	set {_nowmsg.%{_p}%.prefix} to yaml value "Messages.prefix" from "crystals-messages"
	replace all "<prefix>" with "%{_nowmsg.%{_p}%.prefix}%" in {_nowmsg.%{_p}%}
	send "%{_nowmsg.%{_p}%}%" to {_p}
	clear {_nowmsg.%{_p}%}
	clear {_nowmsg.%{_p}%.prefix}

function adminmsg(p: player, str: text):
	set {_str} to "<prefix>&r %{_str}%"
	set {_nowmsg.%{_p}%.prefix} to yaml value "Messages.prefix" from "crystals-messages"
	replace all "<prefix>" with "%{_nowmsg.%{_p}%.prefix}%" in {_str}
	send "%{_str}%" to {_p}
	clear {_nowmsg.%{_p}%.prefix}
	clear {_str}

function kit_create(p: player, kit: text):
	load yaml "plugins/Crystals/kits/%{_kit}%.yml"
	set {crystals.kit.%{_p}%.slot} to 0
	set yaml value "Kit.slot-helmet" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}'s helmet
	set yaml value "Kit.slot-chestplate" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}'s chestplate
	set yaml value "Kit.slot-leggings" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}'s leggings
	set yaml value "Kit.slot-boots" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}'s boots
	set yaml value "Kit.slot-offhand" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}'s offhand
	loop 36 times:
		set yaml value "Kit.slot-%{crystals.kit.%{_p}%.slot}%" from "plugins/Crystals/kits/%{_kit}%.yml" to slot {crystals.kit.%{_p}%.slot} of {_p}'s inventory
		add 1 to {crystals.kit.%{_p}%.slot}
	save yaml "plugins/Crystals/kits/%{_kit}%.yml"
	clear {crystals.kit.%{_p}%.slot}

function kit_load(p: player, kit: text):
	load yaml "plugins/Crystals/kits/%{_kit}%.yml"
	set {crystals.kit.%{_p}%.slot} to 0
	set {_p}'s helmet to yaml value "Kit.slot-helmet" from "plugins/Crystals/kits/%{_kit}%.yml"
	set {_p}'s chestplate to yaml value "Kit.slot-chestplate" from "plugins/Crystals/kits/%{_kit}%.yml"
	set {_p}'s leggings to yaml value "Kit.slot-leggings" from "plugins/Crystals/kits/%{_kit}%.yml"
	set {_p}'s boots to yaml value "Kit.slot-boots" from "plugins/Crystals/kits/%{_kit}%.yml"
	set {_p}'s offhand to yaml value "Kit.slot-offhand" from "plugins/Crystals/kits/%{_kit}%.yml"
	loop 36 times:
		set slot {crystals.kit.%{_p}%.slot} of {_p}'s inventory to yaml value "Kit.slot-%{crystals.kit.%{_p}%.slot}%" from "plugins/Crystals/kits/%{_kit}%.yml"
		add 1 to {crystals.kit.%{_p}%.slot}
	clear {crystals.kit.%{_p}%.slot}

function crystals_displayname(p: player, type: text, name: text, displayname: text):
	load yaml "plugins/Crystals/%{_type}%/%{_name}%.yml" as "plugins/Crystals/%{_type}%/%{_name}%.yml"
	set yaml value "Config.displayname" from "plugins/Crystals/%{_type}%/%{_name}%.yml" to {_displayname}
	save yaml "plugins/Crystals/%{_type}%/%{_name}%.yml"

function crystals_displayitem(p: player, type: text, name: text, displayitem: text):
	load yaml "plugins/Crystals/%{_type}%/%{_name}%.yml" as "plugins/Crystals/%{_type}%/%{_name}%.yml"
	set yaml value "Config.displayitem" from "plugins/Crystals/%{_type}%/%{_name}%.yml" to {_displayitem}
	save yaml "plugins/Crystals/%{_type}%/%{_name}%.yml"

function crystals_list(p: player, type: text):
	if {_type} is "kits":
		load all yaml from directory "plugins/Crystals/kits/"
		send "&8&m          &r &2Crystals &eKIT LIST &8&m          &r" to {_p}
	if {_type} is "arenas":
		load all yaml from directory "plugins/Crystals/arenas/"
		send "&8&m          &r &2Crystals &eARENA LIST &8&m          &r" to {_p}
	loop all of the currently loaded yaml files:
		if {_type} is "kits":
			set {_crystals.list.type} to first 22 characters of loop-value
		if {_type} is "arenas":
			set {_crystals.list.type} to first 24 characters of loop-value

		if {_crystals.list.type} is "plugins/Crystals/kits/":
			set {_crystals.name} to loop-value
			replace all "plugins/Crystals/kits/" with "" in {_crystals.name}
			replace all ".yml" with "" in {_crystals.name}

			send formatted "&r &8» &a<run command:/crystals kit loadinv %{_crystals.name}%><tooltip:&fClick here to load kit &e%{_crystals.name}%&f!&r>&a%{_crystals.name}%&r<reset>" to {_p}

			clear {_crystals.name}

		if {_crystals.list.type} is "plugins/Crystals/arenas/":
			set {_crystals.name} to loop-value
			replace all "plugins/Crystals/arenas/" with "" in {_crystals.name}
			replace all ".yml" with "" in {_crystals.name}
			send "&r &8» &a%{_crystals.name}%" to {_p}
			clear {_crystals.name}

		clear {_crystals.list.type}

function crystals_guikit_ingame(p: player):
	close {_p}'s inventory
	load all yaml from directory "plugins/Crystals/kits/"
	set {_crystals.kitguislot} to 0
	set {_crystals.kitguinowaaa.name} to yaml value "GUIs.kitselector.name" from "crystals-config"
	set {_crystals.kitguinowaaa.rows} to yaml value "GUIs.kitselector.rows" from "crystals-config"
	create a gui with virtual chest inventory with {_crystals.kitguinowaaa.rows} rows named "&r%{_crystals.kitguinowaaa.name}%":
		loop all of the currently loaded yaml files:
			set {_crystals.list.type} to first 22 characters of loop-value
			if {_crystals.list.type} is "plugins/Crystals/kits/":
				set {_crystals.name} to loop-value
				replace all "plugins/Crystals/kits/" with "" in {_crystals.name}
				replace all ".yml" with "" in {_crystals.name}
				
				set {_crystals.kitguinow.name} to yaml value "Config.displayname" from "plugins/Crystals/kits/%{_crystals.name}%.yml"
				set {_crystals.kitguinow.item} to yaml value "Config.displayitem" from "plugins/Crystals/kits/%{_crystals.name}%.yml"
				set {_crystals.kitguinow.item} to {_crystals.kitguinow.item} parsed as item

				make gui slot {_crystals.kitguislot} with {_crystals.kitguinow.item} with no NBT named "&r%{_crystals.kitguinow.name}%":
					if gui click type is left mouse button:
						crystals_givekit_ingame({_p}, {_crystals.name})
						close {_p}'s inventory
				add 1 to {_crystals.kitguislot}
		open last gui for {_p}
	clear {_crystals.list.type}

function crystals_givekit_ingame(p: player, kit: text):
	load yaml "plugins/Crystals/kits/%{_kit}%.yml"
	set {crystals.kit.%{_p}%.slot} to 0
	
	if {_p}'s helmet is air:
		set {_p}'s helmet to yaml value "Kit.slot-helmet" from "plugins/Crystals/kits/%{_kit}%.yml"
	if {_p}'s chestplate is air:
		set {_p}'s chestplate to yaml value "Kit.slot-chestplate" from "plugins/Crystals/kits/%{_kit}%.yml"
	if {_p}'s leggings is air:
		set {_p}'s leggings to yaml value "Kit.slot-leggings" from "plugins/Crystals/kits/%{_kit}%.yml"
	if {_p}'s boots is air:
		set {_p}'s boots to yaml value "Kit.slot-boots" from "plugins/Crystals/kits/%{_kit}%.yml"
	if {_p}'s offhand is air:
		give yaml value "Kit.slot-offhand" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}
	
	loop 36 times:
		give yaml value "Kit.slot-%{crystals.kit.%{_p}%.slot}%" from "plugins/Crystals/kits/%{_kit}%.yml" to {_p}
		add 1 to {crystals.kit.%{_p}%.slot}
	clear {crystals.kit.%{_p}%.slot}


# player join/leave actions
on join:
	stop

on leave:
	stop


# events
on explosion:
	if event-entity is end crystal:
		cancel event
		create a fake explosion at event-location
		set block below event-location to bedrock

on right-click on bedrock:
	cancel event
	set block at event-location to air
	set block above event-location to end crystal
	spawn end crystal above event-location

on right-click on end crystal:
	cancel event
	crystals_guikit_ingame(event-player)

on break of z-aligned oak log:
	cancel event
	set block at event-location to air
	give event-player 4 oak planks
	wait 5 seconds
	set block at event-location to north-south oak log

on break of x-aligned oak log:
	cancel event
	set block at event-location to air
	give event-player 4 oak planks
	wait 5 seconds
	set block at event-location to west-east oak log

on break of oak log:
	cancel event
	set block at event-location to air
	give event-player 4 oak planks
	wait 5 seconds
	set block at event-location to oak log

on break of gravel:
	cancel event
	set block at event-location to stone
	give event-player 2 arrows
	wait 5 seconds
	set block at event-location to gravel

on break of iron ore:
	cancel event
	set block at event-location to stone
	give event-player 2 iron ingots
	wait 5 seconds
	set block at event-location to iron ore

on break of coal ore:
	cancel event
	set block at event-location to stone
	give event-player 2 coal block
	wait 5 seconds
	set block at event-location to coal ore

on break of web:
	cancel event
	set block at event-location to air
	give event-player 1 bow
	wait 10 seconds
	set block at event-location to web

on break of pumpkin:
	cancel event
	set block at event-location to air
	give event-player 1 pumpkin pie
	wait 5 seconds
	set block at event-location to pumpkin

on break of melon:
	cancel event
	set block at event-location to air
	give event-player 2 melon slice
	wait 5 seconds
	set block at event-location to melon

